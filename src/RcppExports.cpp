// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// trimFront_cpp
Rcpp::List trimFront_cpp(CharacterVector r_sread, CharacterVector r_qual, CharacterVector r_primer, std::vector<int> prefix_lens);
RcppExport SEXP MotifBinner2_trimFront_cpp(SEXP r_sreadSEXP, SEXP r_qualSEXP, SEXP r_primerSEXP, SEXP prefix_lensSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type r_sread(r_sreadSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type r_qual(r_qualSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type r_primer(r_primerSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type prefix_lens(prefix_lensSEXP);
    __result = Rcpp::wrap(trimFront_cpp(r_sread, r_qual, r_primer, prefix_lens));
    return __result;
END_RCPP
}
// transfer_gaps_cpp
Rcpp::List transfer_gaps_cpp(CharacterVector aligned_read, CharacterVector r_qual, NumericVector gap_only_cols);
RcppExport SEXP MotifBinner2_transfer_gaps_cpp(SEXP aligned_readSEXP, SEXP r_qualSEXP, SEXP gap_only_colsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type aligned_read(aligned_readSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type r_qual(r_qualSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gap_only_cols(gap_only_colsSEXP);
    __result = Rcpp::wrap(transfer_gaps_cpp(aligned_read, r_qual, gap_only_cols));
    return __result;
END_RCPP
}
// gapQualityTweaker_ol_cpp
Rcpp::List gapQualityTweaker_ol_cpp(CharacterVector reads, NumericMatrix q_mat);
RcppExport SEXP MotifBinner2_gapQualityTweaker_ol_cpp(SEXP readsSEXP, SEXP q_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type reads(readsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type q_mat(q_matSEXP);
    __result = Rcpp::wrap(gapQualityTweaker_ol_cpp(reads, q_mat));
    return __result;
END_RCPP
}
// gapQualityTweaker_non_ol_cpp
Rcpp::List gapQualityTweaker_non_ol_cpp(CharacterVector reads, NumericMatrix q_mat, std::string which_pair, NumericVector avg_quals);
RcppExport SEXP MotifBinner2_gapQualityTweaker_non_ol_cpp(SEXP readsSEXP, SEXP q_matSEXP, SEXP which_pairSEXP, SEXP avg_qualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type reads(readsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type q_mat(q_matSEXP);
    Rcpp::traits::input_parameter< std::string >::type which_pair(which_pairSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_quals(avg_qualsSEXP);
    __result = Rcpp::wrap(gapQualityTweaker_non_ol_cpp(reads, q_mat, which_pair, avg_quals));
    return __result;
END_RCPP
}
// scoreAlignmentPositions_cpp
Rcpp::List scoreAlignmentPositions_cpp(CharacterVector reads, NumericMatrix q_mat);
RcppExport SEXP MotifBinner2_scoreAlignmentPositions_cpp(SEXP readsSEXP, SEXP q_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type reads(readsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type q_mat(q_matSEXP);
    __result = Rcpp::wrap(scoreAlignmentPositions_cpp(reads, q_mat));
    return __result;
END_RCPP
}
// buildConsensus_cpp
Rcpp::List buildConsensus_cpp(NumericMatrix score_mat, double required_dominance);
RcppExport SEXP MotifBinner2_buildConsensus_cpp(SEXP score_matSEXP, SEXP required_dominanceSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type score_mat(score_matSEXP);
    Rcpp::traits::input_parameter< double >::type required_dominance(required_dominanceSEXP);
    __result = Rcpp::wrap(buildConsensus_cpp(score_mat, required_dominance));
    return __result;
END_RCPP
}
// tallyPrimerSeqErrors_cpp
std::map<char, std::map<char, std::map<char, int> > > tallyPrimerSeqErrors_cpp(CharacterVector r_sread, CharacterVector r_primer, CharacterVector r_qual);
RcppExport SEXP MotifBinner2_tallyPrimerSeqErrors_cpp(SEXP r_sreadSEXP, SEXP r_primerSEXP, SEXP r_qualSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type r_sread(r_sreadSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type r_primer(r_primerSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type r_qual(r_qualSEXP);
    __result = Rcpp::wrap(tallyPrimerSeqErrors_cpp(r_sread, r_primer, r_qual));
    return __result;
END_RCPP
}
// regionSplit_cpp
Rcpp::List regionSplit_cpp(CharacterVector mapped_read, CharacterVector profile, CharacterVector region_map, CharacterVector mapped_qual);
RcppExport SEXP MotifBinner2_regionSplit_cpp(SEXP mapped_readSEXP, SEXP profileSEXP, SEXP region_mapSEXP, SEXP mapped_qualSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type mapped_read(mapped_readSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type profile(profileSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type region_map(region_mapSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type mapped_qual(mapped_qualSEXP);
    __result = Rcpp::wrap(regionSplit_cpp(mapped_read, profile, region_map, mapped_qual));
    return __result;
END_RCPP
}
